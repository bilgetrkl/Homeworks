# Program to calculate and print Fibonacci sequence
Begin Data Section
0 0    # Program counter
1 1000 # Stack pointer
2 0    # System call result
3 0    # Instruction count

# User variables (0-20 range)
10 8   # n = 8 (number of fibonacci terms)
11 0   # fib_prev = 0
12 1   # fib_curr = 1  
13 1   # counter = 1
14 0   # temp register 1
15 0   # temp register 2
16 0   # temp register 3
17 -1  # constant -1
18 0   # temp for special cases
19 0   # unused
20 0   # unused
End Data Section

Begin Instruction Section

# Check special cases
0 JIF 10 30    # If n <= 0, jump to special case n == 0
1 CPY 10 14    # Copy n to temp register
2 ADD 14 -1    # Compute n - 1
3 JIF 14 32    # If (n - 1) <= 0, jump to special case n == 1

# Print first fibonacci number (0)
4 SYSCALL PRN 11  # Print fib_prev (0)

# Main Fibonacci loop
5 CPY 13 14   # Copy counter to temp register
6 CPY 10 15   # Copy n to temp register
7 SUBI 14 15  # Calculate counter - n; result in 15
8 JIF 15 10   # If counter - n <= 0, continue loop
9 JIF 17 28   # Else, jump to end of loop

# Fibonacci calculation and print
10 CPY 11 16   # Copy fib_prev to temp register
11 SYSCALL PRN 12  # Print current fib_curr
12 ADDI 16 12  # Add fib_curr to temp; now holds fib_prev + fib_curr
13 CPY 12 11   # Shift: set fib_prev = fib_curr
14 CPY 16 12   # Update fib_curr = (fib_prev + fib_curr)
15 ADD 13 1    # Increment counter
16 JIF 17 5   # Jump back to the Fibonacci loop

# End of main loop
28 HLT         # Halt execution

# Special case: n == 0
30 SYSCALL PRN 11  # Print fibonacci previous
31 HLT         # Halt

# Special case: n == 1  
32 SYSCALL PRN 12  # Print fibonacci previous
33 HLT         # Halt
End Instruction Section